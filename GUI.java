import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;


public class GUI {
    private JPanel panelMain;
    private JTabbedPane tabbedPane1;
    private JButton button1;
    private JTextField diameterInput;
    private JTextField cdInput;
    private JTextField massInput;
    private JTextField oneDiaInput;
    private JTextField twoDiaInput;
    private JComboBox twoToggleInput;
    private JTextField rFactorInput;
    private JTextField gAltInput;
    private JTextField gSpeedInput;

    public GUI() {
        JFrame frame = new JFrame("GUI");
        frame.setContentPane(panelMain);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        button1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                double diameter = Double.parseDouble(diameterInput.getText()) / 39.37; // in to m
                double cd = Double.parseDouble(cdInput.getText());
                double mass = Double.parseDouble(massInput.getText());

                double oneDiameter = Double.parseDouble(oneDiaInput.getText()) / 3.281; // ft to m
                String twoToggle = twoToggleInput.getSelectedItem().toString();
                double twoDiameter = Double.parseDouble(twoDiaInput.getText()) / 3.281; // ft to m

                double rFactor = Double.parseDouble(rFactorInput.getText());
                double gAlt = Double.parseDouble(gAltInput.getText());
                double gSpeed = Double.parseDouble(gSpeedInput.getText());

                Simulation sim = new Simulation(diameter, cd, mass, oneDiameter, twoToggle,
                                                twoDiameter, rFactor, gAlt, gSpeed);
                sim.simulate();
            }
        });
    }

    public static void main(String[] args) {
        // JFrame frame = new JFrame("GUI");
        // frame.setContentPane(new GUI().panelMain);
        // frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // frame.pack();
        // frame.setVisible(true);

        GUI test = new GUI();
    }

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(
                new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 25, 0),
                                                                   -1, -1));
        panelMain.setMaximumSize(new Dimension(400, 350));
        panelMain.setMinimumSize(new Dimension(400, 350));
        panelMain.setPreferredSize(new Dimension(400, 350));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, 42, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Rocket Simulator");
        panelMain.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2,
                                                                               com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                               com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                               null, null, null, 0,
                                                                               false));
        tabbedPane1 = new JTabbedPane();
        panelMain.add(tabbedPane1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK
                                                                                            | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK
                                                                                            | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                                                                                    null,
                                                                                    new Dimension(
                                                                                            200,
                                                                                            200),
                                                                                    null, 0,
                                                                                    false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(
                new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1,
                                                                   -1));
        tabbedPane1.addTab("Rocket", panel1);
        diameterInput = new JTextField();
        diameterInput.setText("");
        panel1.add(diameterInput, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                   null,
                                                                                   new Dimension(
                                                                                           150, -1),
                                                                                   null, 0, false));
        cdInput = new JTextField();
        panel1.add(cdInput, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1,
                                                                             com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                             com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                             com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                             com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                             null,
                                                                             new Dimension(150, -1),
                                                                             null, 0, false));
        massInput = new JTextField();
        panel1.add(massInput, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1,
                                                                               com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                               com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                               null,
                                                                               new Dimension(150,
                                                                                             -1),
                                                                               null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Diameter (in)");
        panel1.add(label2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        final JLabel label3 = new JLabel();
        label3.setText("Drag Coefficient");
        panel1.add(label3, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        final JLabel label4 = new JLabel();
        label4.setText("Mass (kg)");
        panel1.add(label4, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(
                new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1,
                                                                   -1));
        tabbedPane1.addTab("Parachutes", panel2);
        oneDiaInput = new JTextField();
        panel2.add(oneDiaInput, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                 null,
                                                                                 new Dimension(150,
                                                                                               -1),
                                                                                 null, 0, false));
        twoDiaInput = new JTextField();
        panel2.add(twoDiaInput, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                 null,
                                                                                 new Dimension(150,
                                                                                               -1),
                                                                                 null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("1st Parachute Diameter (ft)");
        panel2.add(label5, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        final JLabel label6 = new JLabel();
        label6.setText("2nd Parachute Toggle");
        panel2.add(label6, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        final JLabel label7 = new JLabel();
        label7.setText("2nd Parachute Diameter (ft)");
        panel2.add(label7, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        twoToggleInput = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("True");
        defaultComboBoxModel1.addElement("False");
        twoToggleInput.setModel(defaultComboBoxModel1);
        panel2.add(twoToggleInput, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                                                                                    com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                    null, null,
                                                                                    null, 0,
                                                                                    false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(
                new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1,
                                                                   -1));
        tabbedPane1.addTab("Wind", panel3);
        rFactorInput = new JTextField();
        panel3.add(rFactorInput, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1,
                                                                                  com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                                  com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                  com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                                  com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                  null,
                                                                                  new Dimension(150,
                                                                                                -1),
                                                                                  null, 0, false));
        gAltInput = new JTextField();
        panel3.add(gAltInput, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1,
                                                                               com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                               com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                               com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                               null,
                                                                               new Dimension(150,
                                                                                             -1),
                                                                               null, 0, false));
        gSpeedInput = new JTextField();
        panel3.add(gSpeedInput, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                                 com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                 null,
                                                                                 new Dimension(150,
                                                                                               -1),
                                                                                 null, 0, false));
        final JLabel label8 = new JLabel();
        label8.setText("Roughness Factor");
        panel3.add(label8, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        final JLabel label9 = new JLabel();
        label9.setText("Gradient Starting Alt. (m)");
        panel3.add(label9, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1,
                                                                            com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                            com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                            null, null, null, 0,
                                                                            false));
        final JLabel label10 = new JLabel();
        label10.setText("Gradient Starting Speed (m/s)");
        panel3.add(label10, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1,
                                                                             com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                             com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                             com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                             com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                             null, null, null, 0,
                                                                             false));
        button1 = new JButton();
        button1.setText("Start Simulation");
        panelMain.add(button1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2,
                                                                                com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                                com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,
                                                                                com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK
                                                                                        | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                                                                                com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                null, null, null, 0,
                                                                                false));
    }

    /** @noinspection ALL */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        }
        else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            }
            else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(),
                             size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH)
                              .startsWith("mac");
        Font fontWithFallback = isMac ?
                                new Font(font.getFamily(), font.getStyle(), font.getSize()) :
                                new StyleContext().getFont(font.getFamily(), font.getStyle(),
                                                           font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback :
               new FontUIResource(fontWithFallback);
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
